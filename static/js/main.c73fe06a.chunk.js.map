{"version":3,"sources":["Layout/Header.js","Layout/NotFound.js","Layout/CreateDeckButton.js","utils/api/index.js","Layout/DisplayDecks.js","Layout/StudyBreadCrumb.js","Layout/FrontBack.js","Layout/StudyNextCard.js","Layout/StudyCards.js","Layout/Study.js","Layout/CreateDeck.js","Layout/DisplayCards.js","Layout/Deck.js","Layout/EditDeck.js","Layout/AddOrEdit.js","Layout/index.js","App.js","index.js"],"names":["Header","className","NotFound","CreateDeckButton","to","type","class","API_BASE_URL","process","headers","Headers","stripCards","deck","cards","fetchJson","url","options","onCancel","a","fetch","response","status","Error","statusText","json","name","console","error","stack","Promise","resolve","listDecks","signal","method","body","JSON","stringify","readDeck","deckId","updatedDeck","id","deleteDeck","card","Number","readCard","cardId","updatedCard","append","DisplayDecks","decks","setDecks","history","useHistory","useEffect","abortController","AbortController","loadDecks","abort","disDecks","map","length","description","onClick","window","confirm","go","StudyBreadCrumbs","FrontBack","side","front","back","StudyNextCard","setCardNum","cardNum","flip","log","push","StudyCards","setSide","Study","setDeck","setCards","useState","useParams","loadDeck","StudyBreadCrumb","CreateDeck","newDeck","setName","setDescription","onSubmit","event","preventDefault","createDeck","then","result","for","placeholder","onChange","target","value","rows","DisplayCards","deleteCardHandler","deleteCard","displayCards","Deck","useRouteMatch","EditDeck","updateDeck","AddOrEdit","params","setCard","setFront","setBack","handleFrontChange","handleBackChange","loadCard","handleSubmit","formNewDeck","updateCard","createCard","Layout","exact","path","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.c73fe06a.chunk.js","sourcesContent":["import React from \"react\";\n\nfunction Header() {\n  return (\n    <header className=\"jumbotron bg-dark\">\n      <div className=\"container text-white\">\n        <h1 className=\"display-4\">Flashcard-o-matic</h1>\n        <p className=\"lead\">Discover The Flashcard Difference.</p>\n      </div>\n    </header>\n  );\n}\n\nexport default Header;\n","import React from \"react\";\n\nfunction NotFound() {\n  return (\n    <div className=\"NotFound\">\n      <h1>Not Found</h1>\n    </div>\n  );\n}\n\nexport default NotFound;\n","import React from \"react\";\r\nimport { Link} from \"react-router-dom\";\r\n\r\n\r\nfunction CreateDeckButton(){\r\n    return <Link to={\"/decks/new\"}><button type=\"button\" class=\"btn btn-secondary\"><span>&#43;</span>Create Deck</button></Link>\r\n}\r\n\r\nexport default CreateDeckButton;","/**\n * Defines the base URL for the API.\n * The default values is overridden by the `API_BASE_URL` environment variable.\n */\nconst API_BASE_URL = process.env.API_BASE_URL || \"http://localhost:5000\";\n\n/**\n * Defines the default headers for these functions to work with `json-server`\n */\nconst headers = new Headers();\nheaders.append(\"Content-Type\", \"application/json\");\n\n/**\n * Removes the `cards` property from the deck so it is not accidentally saved with the deck.\n *\n * This function is NOT exported because it is not needed outside of this file.\n *\n * @param deck\n *  the deck instance\n * @returns {*}\n *  a copy of the deck instance with the `cards` property removed.\n */\nfunction stripCards(deck) {\n  const { cards, ...deckWithoutCards } = deck;\n  return deckWithoutCards;\n}\n\n/**\n * Fetch `json` from the specified URL and handle error status codes and ignore `AbortError`s\n *\n * This function is NOT exported because it is not needed outside of this file.\n *\n * @param url\n *  the url for the requst.\n * @param options\n *  any options for fetch\n * @param onCancel\n *  default value returned if the fetch is cancelled.\n * @returns {Promise<Error|any>}\n *  a promise that resolves to the `json` data or an error.\n *  If the response is not in the 200 - 399 range the promise is rejected.\n */\n\nasync function fetchJson(url, options, onCancel) {\n  try {\n    const response = await fetch(url, options);\n\n    if (response.status < 200 || response.status > 399) {\n      throw new Error(`${response.status} - ${response.statusText}`);\n    }\n\n    if (response.status === 204) {\n      return null;\n    }\n\n    return await response.json();\n\n  } catch (error) {\n    if (error.name !== \"AbortError\") {\n      console.error(error.stack);\n      throw error;\n    }\n    return Promise.resolve(onCancel);\n  }\n}\n\n/**\n * Retrieves all existing decks.\n * @returns {Promise<[deck]>}\n *  a promise that resolves to a possibly empty array of decks saved in the database.\n */\nexport async function listDecks(signal) {\n  const url = `${API_BASE_URL}/decks?_embed=cards`;\n  return await fetchJson(url, { signal }, []);\n}\n\n/**\n * Saves deck to the database (public/data/db.json).\n * There is no validation done on the deck object, any object will be saved.\n * @param deck\n *  the deck to save, which must not have an `id` property\n * @param signal\n *  optional AbortController.signal\n * @returns {Promise<deck>}\n *  a promise that resolves the saved deck, which will now have an `id` property.\n */\nexport async function createDeck(deck, signal) {\n  const url = `${API_BASE_URL}/decks`;\n  const options = {\n    method: \"POST\",\n    headers,\n    body: JSON.stringify(stripCards(deck)),\n    signal,\n  };\n  return await fetchJson(url, options, {});\n}\n\n/**\n * Retrieves the deck with the specified `deckId`\n * @param deckId\n *  the `id` property matching the desired deck.\n * @param signal\n *  optional AbortController.signal\n * @returns {Promise<any>}\n *  a promise that resolves to the saved deck.\n */\nexport async function readDeck(deckId, signal) {\n  const url = `${API_BASE_URL}/decks/${deckId}?_embed=cards`;\n  return await fetchJson(url, { signal }, {});\n}\n\n/**\n * Updates an existing deck\n * @param updatedDeck\n *  the deck to save, which must have an `id` property.\n * @param signal\n *  optional AbortController.signal\n * @returns {Promise<Error|*>}\n *  a promise that resolves to the updated deck.\n */\nexport async function updateDeck(updatedDeck, signal) {\n  const url = `${API_BASE_URL}/decks/${updatedDeck.id}?_embed=cards`;\n  const options = {\n    method: \"PUT\",\n    headers,\n    body: JSON.stringify(stripCards(updatedDeck)),\n    signal,\n  };\n  return await fetchJson(url, options, updatedDeck);\n}\n\n/**\n * Deletes the deck with the specified `deckId`.\n * @param deckId\n *  the id of the deck to delete\n * @param signal\n *  optional AbortController.signal\n * @returns {Promise<Error|*>}\n *  a promise that resolves to an empty object.\n */\nexport async function deleteDeck(deckId, signal) {\n  const url = `${API_BASE_URL}/decks/${deckId}`;\n  const options = { method: \"DELETE\", signal };\n  return await fetchJson(url, options);\n}\n\n/**\n * Creates a new card associated with the specified `deckId`.\n * There is no validation that there is an existing deck with the specified `deckId`.\n * @param deckId\n *  the id of the target deck\n * @param card\n *  the card to create, which must not have an `id` property\n * @param signal\n *  optional AbortController.signal\n * @returns {Promise<Error|*>}\n *  a promise that resolves to the new card, which will have an `id` property.\n */\nexport async function createCard(deckId, card, signal) {\n  // There is a bug in json-server, if you post to /decks/:deckId/cards the associated deckId is a string\n  // and the card is not related to the deck because the data types of the ID's are different.\n  const url = `${API_BASE_URL}/cards`;\n  card.deckId = Number(deckId);\n  const options = {\n    method: \"POST\",\n    headers,\n    body: JSON.stringify(card),\n    signal,\n  };\n  return await fetchJson(url, options, card);\n}\n\n/**\n * Retrieves the card with the specified `cardId`\n * @param cardId\n *  the id of the target\n * @param signal\n *  optional AbortController.signal\n * @returns {Promise<Error|*>}\n *  a promise that resolves to the saved card.\n */\nexport async function readCard(cardId, signal) {\n  const url = `${API_BASE_URL}/cards/${cardId}`;\n  return await fetchJson(url, { signal }, {});\n}\n\n/**\n * Updates an existing deck\n * @param updatedCard\n *  the card to save, which must have an `id` property.\n * @param signal\n *  optional AbortController.signal\n * @returns {Promise<Error|*>}\n *  a promise that resolves to the updated card.\n */\nexport async function updateCard(updatedCard, signal) {\n  const url = `${API_BASE_URL}/cards/${updatedCard.id}`;\n  const options = {\n    method: \"PUT\",\n    headers,\n    body: JSON.stringify(updatedCard),\n  };\n  return await fetchJson(url, options, updatedCard);\n}\n\n/**\n * Deletes the card with the specified `cardId`.\n * @param cardId\n *  the id of the card to delete\n * @param signal\n *  optional AbortController.signal\n * @returns {Promise<Error|*>}\n *  a promise that resolves to an empty object.\n */\nexport async function deleteCard(cardId, signal) {\n  const url = `${API_BASE_URL}/cards/${cardId}`;\n  const options = { method: \"DELETE\", signal };\n  return await fetchJson(url, options);\n}\n","import React, {useEffect} from \"react\";\r\nimport { deleteDeck, listDecks } from \"../utils/api\";\r\nimport { useHistory , Link} from \"react-router-dom\";\r\n\r\n\r\nfunction DisplayDecks({decks, setDecks}){\r\n    const history = useHistory();\r\n\r\n    useEffect(() => {\r\n        const abortController = new AbortController();\r\n\r\n        async function loadDecks() {\r\n            const response = await listDecks(abortController.signal);\r\n\r\n            setDecks(response);\r\n        }\r\n        loadDecks();\r\n\r\n        return () => abortController.abort();\r\n    }, []);\r\n\r\n    function deleteHandler(id) {\r\n        if(window.confirm(\"Delete this deck?\\n\\nYou will not be able to recover it.\")){\r\n            deleteDeck(id);\r\n            history.go(0);\r\n        }\r\n    }\r\n\r\n\r\n    const disDecks = decks.map(deck => {\r\n        return (\r\n            <div className=\"mainDecks\">\r\n                <h3>{deck.name}</h3>\r\n                <p>{deck.cards.length} cards</p>\r\n                <p>{deck.description}</p>\r\n                <Link to={`/decks/${deck.id}`} ><button class=\"btn btn-secondary mr-2\">View</button></Link>\r\n                <Link to={`/decks/${deck.id}/study`}><button class=\"btn btn-primary mr-2\">Study</button></Link>\r\n                <button onClick={() => deleteHandler(deck.id)} class=\"btn btn-danger\">Delete</button>\r\n            </div>\r\n        );\r\n    })\r\n\r\n    return (\r\n        <div>\r\n            {disDecks}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default DisplayDecks;","import React from \"react\";\r\nimport {Link} from \"react-router-dom\";\r\n\r\n\r\nfunction StudyBreadCrumbs({deck}){\r\n    return (\r\n        <div>\r\n            <nav aria-label=\"breadcrumb\">\r\n                <ol class=\"breadcrumb\">\r\n                    <li class=\"breadcrumb-item\"><Link to=\"/\" >Home</Link></li>\r\n                    <li class=\"breadcrumb-item\"><Link>{deck.name}</Link></li>\r\n                    <li class=\"breadcrumb-item active\" aria-current=\"page\">Study</li>\r\n                </ol>\r\n            </nav>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default StudyBreadCrumbs;","import React from \"react\";\r\n\r\n\r\nfunction FrontBack({side, card}){\r\n\r\n    if(!side){\r\n        return <p>{card.back}</p>\r\n    }\r\n    return <p>{card.front}</p>\r\n}\r\n\r\nexport default FrontBack;","import React from \"react\";\r\nimport { useHistory} from \"react-router-dom\";\r\n\r\nfunction StudyNextCard({setCardNum, side, cardNum, flip, cards}){\r\n    const history = useHistory();\r\n\r\n\r\n    function next(){\r\n        if((cardNum+1) < (cards.length)){\r\n            setCardNum(cardNum+1);\r\n            flip();\r\n        }\r\n        else{\r\n            flip();\r\n            console.log(cardNum, cards)\r\n            if(window.confirm(\"Restart cards?\\n\\nClick `cancel` to return to the home page.\")){\r\n                setCardNum(0);\r\n            }\r\n            else{\r\n                history.push(\"/\");\r\n            }\r\n        }\r\n        }\r\n\r\n\r\n\r\n    if(!side){\r\n        return <button onClick={next}>Next</button>\r\n    }\r\n    return null;\r\n}\r\n\r\nexport default StudyNextCard;","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport FrontBack from \"./FrontBack\";\r\nimport StudyNextCard from \"./StudyNextCard\";\r\n\r\n\r\nfunction StudyCards({cards, cardNum, side, setSide, setCardNum, deck}){\r\n\r\n    function flip() {\r\n        if(!side){\r\n            setSide(true)\r\n        }\r\n        else{\r\n            setSide(false);\r\n        }\r\n    }\r\n\r\n    if(cards[cardNum]){\r\n        if((cards.length) > 2){\r\n            return (\r\n            <div className=\"studyCard\">\r\n                <h3>Card {cardNum+1} of {cards.length}</h3>\r\n                <FrontBack side={side} card={cards[cardNum]}/>\r\n                <Link><button onClick={flip}>Flip</button></Link>\r\n                <StudyNextCard setCardNum={setCardNum} side={side} cardNum={cardNum} flip={flip} cards={cards}/>\r\n            </div>\r\n            )\r\n        }\r\n    }\r\n\r\n    if(deck.id){\r\n        return (\r\n            <div className=\"atLeast3\">\r\n                <h2>Not enough cards.</h2>\r\n                <p>You need at least 3 cards to study. There is/are {cards.length} card(s) in this deck.</p>\r\n                <Link to={`/decks/${deck.id}/cards/new`}><button type=\"button\" class=\"btn btn-primary mr-2\"><span>&#43;</span>Add Cards</button></Link>\r\n            </div>\r\n        )\r\n    }\r\n    return \"Loading\";\r\n\r\n}\r\n\r\nexport default StudyCards;","import React, {useEffect, useState} from \"react\";\r\nimport StudyBreadCrumbs from \"./StudyBreadCrumb\";\r\nimport { useParams} from \"react-router-dom\";\r\nimport { readDeck } from \"../utils/api\";\r\nimport StudyCards from \"./StudyCards\";\r\n\r\nfunction Study({decks, deck, setDeck, cards, setCards}){\r\n    const [cardNum, setCardNum] = useState(0);\r\n    const [side, setSide] = useState(true);\r\n\r\n\r\n    const params = useParams();\r\n    const {deckId} = params;\r\n\r\n    useEffect(() => {\r\n        const abortController = new AbortController();\r\n\r\n        async function loadDeck() {\r\n            const response = await readDeck(deckId, abortController.signal);\r\n\r\n            setDeck(response);\r\n            setCards(response.cards);\r\n        }\r\n        loadDeck();\r\n\r\n        return () => abortController.abort();\r\n    }, []);\r\n    \r\n\r\n\r\n    if(cards){\r\n        return (\r\n        <div>\r\n            <StudyBreadCrumbs deck={deck}/>\r\n            <h1>Study: {deck.name}</h1>\r\n            <StudyCards cards={cards} cardNum={cardNum} side={side} setSide={setSide} setCardNum={setCardNum} deck={deck}/>\r\n        </div>\r\n    )}\r\n    return \"Loading\";\r\n}\r\n\r\nexport default Study;","import React, { useState } from \"react\";\r\nimport {Link} from \"react-router-dom\";\r\nimport { createDeck } from \"../utils/api\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\n\r\n\r\nfunction CreateDeck({decks, newDeck}){\r\n    const history = useHistory();\r\n    const [name, setName] = useState(\"\");\r\n    const [description, setDescription] = useState(\"\");\r\n    const handleNameChange = (event) => setName(event.target.value);\r\n    const handleDescriptionChange = (event) => setDescription(event.target.value);\r\n\r\n    const handleSubmit = (event) => {\r\n        event.preventDefault();\r\n        const formNewDeck = {\r\n            name : name,\r\n            description : description,\r\n        }\r\n        createDeck(formNewDeck).then((result)=>history.push(`/decks/${result.id}`));\r\n      };\r\n\r\n    return (\r\n        <div>\r\n            <nav aria-label=\"breadcrumb\">\r\n                <ol class=\"breadcrumb\">\r\n                    <li class=\"breadcrumb-item\"><Link to=\"/\" >Home</Link></li>\r\n                    <li class=\"breadcrumb-item active\" aria-current=\"page\">CreateDeck</li>\r\n                </ol>\r\n            </nav>\r\n            <h1>Create Deck</h1>\r\n            <form onSubmit={handleSubmit}>\r\n                <div class=\"form-group\">\r\n                    <label for=\"name\">Name</label>\r\n                    <input type=\"text\" class=\"form-control\" id=\"name\" aria-describedby=\"emailHelp\" placeholder=\"Deck Name\" onChange={handleNameChange} value={name}/>\r\n                </div>\r\n                <div class=\"form-group\">\r\n                    <label for=\"description\">Description</label>\r\n                    <textarea type=\"text\" class=\"form-control\" id=\"description\" \r\n                    placeholder=\"Brief description of the deck\" rows=\"4\" onChange={handleDescriptionChange} value={description}></textarea>\r\n                </div>\r\n\r\n                <Link to={\"/\"}><button type=\"button\" class=\"btn btn-secondary mr-2\">Cancel</button></Link>\r\n                <button type=\"submit\" class=\"btn btn-primary\">Submit</button>\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CreateDeck;","import React, {useEffect} from \"react\";\r\nimport {Link, useHistory} from \"react-router-dom\";\r\nimport { deleteCard } from \"../utils/api\";\r\n\r\n\r\nfunction DisplayCards({cards, setCards}){\r\n    const history = useHistory();\r\n\r\n    function deleteCardHandler(id) {\r\n        if(window.confirm(\"Delete this Card?\\n\\nYou will not be able to recover it.\")){\r\n            deleteCard(id);\r\n            history.go(0);\r\n        }\r\n    }\r\n    \r\n    const displayCards = cards.map(card=>{\r\n        return(\r\n            <div class=\"border border-dark my-3 p-3\">\r\n                <div class=\"row\">\r\n                    <p class=\"col\">{card.front}</p>\r\n                    <p class=\"col\">{card.back}</p>\r\n                </div>\r\n                <Link to={`/decks/${card.deckId}/cards/${card.id}/edit`}><button type=\"button\" class=\"btn btn-secondary mr-2\">Edit</button></Link>\r\n                <button type=\"button\" class=\"btn btn-danger\" onClick={() => deleteCardHandler(card.id)}>Delete</button>\r\n            </div>\r\n        )\r\n    })\r\n\r\n\r\n\r\n\r\n\r\n    if(cards.length > 0){\r\n        return (\r\n            <div class=\"mt-4\">\r\n                <h3>Cards</h3>\r\n                {displayCards}\r\n            </div>\r\n        )\r\n    }\r\n    return null;\r\n}\r\n\r\nexport default DisplayCards;\r\n","import React, {useEffect} from \"react\";\r\nimport { useParams, Link , useRouteMatch, useHistory} from \"react-router-dom\";\r\nimport { readDeck } from \"../utils/api\";\r\nimport DisplayCards from \"./DisplayCards\";\r\nimport { deleteDeck } from \"../utils/api\";\r\n\r\n\r\nfunction Deck({setDeck, deck, cards, setCards}){\r\n    const params = useParams();\r\n    const {deckId} = params;\r\n    const {url} = useRouteMatch();\r\n    const history = useHistory();\r\n\r\n    useEffect(() => {\r\n        const abortController = new AbortController();\r\n\r\n        async function loadDeck() {\r\n            const response = await readDeck(deckId, abortController.signal);\r\n\r\n            setDeck(response);\r\n            setCards(response.cards);\r\n        }\r\n        loadDeck();\r\n\r\n        return () => abortController.abort();\r\n    }, []);\r\n\r\n    function deleteHandler(id) {\r\n        if(window.confirm(\"Delete this deck?\\n\\nYou will not be able to recover it.\")){\r\n            deleteDeck(id);\r\n            history.push(\"/\");\r\n        }\r\n    }\r\n\r\n\r\n    if(deck){\r\n        return (\r\n            <div>\r\n                <nav aria-label=\"breadcrumb\">\r\n                    <ol class=\"breadcrumb\">\r\n                        <li class=\"breadcrumb-item\"><Link to={\"/\"}>Home</Link></li>\r\n                        <li class=\"breadcrumb-item active\" aria-current=\"page\">{deck.name}</li>\r\n                    </ol>\r\n                </nav>\r\n                <h4>{deck.name}</h4>\r\n                <p>{deck.description}</p>\r\n                <Link to={`${url}/edit`}><buton type=\"button\" class=\"btn btn-secondary mr-2\">Edit</buton></Link>\r\n                <Link to={`${url}/study`}><button type=\"button\" class=\"btn btn-primary mr-2\">Study</button></Link>\r\n                <Link to={`${url}/cards/new`}><button type=\"button\" class=\"btn btn-primary mr-2\"><span>&#43;</span>Add Cards</button></Link>\r\n                <buton type=\"button\" class=\"btn btn-danger\" onClick={() => deleteHandler(deck.id)}>Delete</buton>\r\n                <DisplayCards cards={cards} setCards={setCards} deck={deck}/>\r\n            </div>\r\n        )\r\n    }\r\n    return \"loading\";\r\n}\r\n\r\nexport default Deck;","import React, {useState, useEffect} from \"react\";\r\nimport {Link} from \"react-router-dom\";\r\nimport { updateDeck } from \"../utils/api\";\r\nimport { useHistory , useParams} from \"react-router-dom\";\r\nimport { readDeck } from \"../utils/api\";\r\nimport CreateDeckButton from \"./CreateDeckButton\";\r\n\r\n\r\n\r\nfunction EditDeck({setDeck, deck}){\r\n    const history = useHistory();\r\n    const params = useParams();\r\n    const {deckId} = params;\r\n\r\n\r\n    const [name, setName] = useState(deck.name);\r\n    const [description, setDescription] = useState(deck.description);\r\n    const handleNameChange = (event) => setName(event.target.value);\r\n    const handleDescriptionChange = (event) => setDescription(event.target.value);\r\n\r\n    useEffect(() => {\r\n        const abortController = new AbortController();\r\n\r\n        async function loadDeck() {\r\n            const response = await readDeck(deckId, abortController.signal);\r\n\r\n            setDeck(response);\r\n        }\r\n        loadDeck();\r\n\r\n        return () => abortController.abort();\r\n    }, []);\r\n\r\n    const handleSubmit = (event) => {\r\n        event.preventDefault();\r\n        const formNewDeck = {\r\n            name : name,\r\n            description : description,\r\n            id: deckId\r\n        }\r\n        updateDeck(formNewDeck).then((result)=>history.push(`/decks/${result.id}`));\r\n      };\r\n\r\n\r\n    return (\r\n        <div>\r\n            <nav aria-label=\"breadcrumb\">\r\n                <ol class=\"breadcrumb\">\r\n                    <li class=\"breadcrumb-item\"><Link to=\"/\" >Home</Link></li>\r\n                    <li class=\"breadcrumb-item\"><Link >{deck.name}</Link></li>\r\n                    <li class=\"breadcrumb-item active\" aria-current=\"page\">Edit Deck</li>\r\n                </ol>\r\n            </nav>\r\n            <h1>Edit Deck</h1>\r\n            <form onSubmit={handleSubmit}>\r\n                <div class=\"form-group\">\r\n                    <label for=\"nameInput\">Name</label>\r\n                    <input type=\"text\" class=\"form-control\" id=\"name\" placeholder={deck.name} onChange={handleNameChange} value={deck.name}/>\r\n                </div>\r\n                <div class=\"form-group\">\r\n                    <label for=\"descriptionInput\">Description</label>\r\n                    <textarea type=\"text\" class=\"form-control\" id=\"description\" \r\n                    placeholder={deck.description} rows=\"4\" onChange={handleDescriptionChange} value={deck.description}></textarea>\r\n                </div>\r\n\r\n                <Link to={`/decks/${deck.id}`}><button type=\"button\" class=\"btn btn-secondary mr-2\">Cancel</button></Link>\r\n                <button type=\"submit\" class=\"btn btn-primary\">Submit</button>\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default EditDeck;","import React, {useState, useEffect} from \"react\";\r\nimport {Link} from \"react-router-dom\";\r\nimport { createCard, readCard, updateCard } from \"../utils/api\";\r\nimport { useHistory , useParams} from \"react-router-dom\";\r\nimport { readDeck } from \"../utils/api\";\r\n\r\n\r\nfunction AddOrEdit({setDeck, deck}) {\r\n    const history = useHistory();\r\n    const params = useParams();\r\n    const {deckId, cardId} = params;\r\n    const [card, setCard] = useState();\r\n    const [front, setFront] = useState(\"\");\r\n    const [back, setBack] = useState(\"\");\r\n    const handleFrontChange = (event) => setFront(event.target.value);\r\n    const handleBackChange = (event) => setBack(event.target.value);\r\n\r\n\r\n\r\n    useEffect(() => {\r\n        const abortController = new AbortController();\r\n\r\n        async function loadDeck() {\r\n            const response = await readDeck(deckId, abortController.signal);\r\n\r\n            setDeck(response);\r\n        }\r\n        async function loadCard() {\r\n            const response = await readCard(cardId, abortController.signal);\r\n\r\n            setCard(response);\r\n        }\r\n        loadDeck();\r\n        if(cardId){\r\n            loadCard();\r\n        }\r\n\r\n        return () => abortController.abort();\r\n    }, []);\r\n\r\n\r\n    const handleSubmit = (event) => {\r\n        event.preventDefault();\r\n        console.log(event);\r\n        if(cardId){\r\n            const formNewDeck = {\r\n                front : front,\r\n                back : back,\r\n                id: cardId,\r\n                deckId: Number(deckId)\r\n    \r\n            }\r\n            console.log(formNewDeck);\r\n            updateCard(formNewDeck).then((result)=>history.push(`/decks/${deckId}`));\r\n        }\r\n        else{\r\n            const formNewDeck = {\r\n                front : front,\r\n                back : back,\r\n            }\r\n            createCard(deckId, formNewDeck).then((result)=>history.push(`/decks/${deckId}`));\r\n        }\r\n      };\r\n\r\n\r\n    if(cardId){\r\n    if(card){\r\n        return (\r\n            <div>\r\n                <nav aria-label=\"breadcrumb\">\r\n                    <ol class=\"breadcrumb\">\r\n                        <li class=\"breadcrumb-item\"><Link to=\"/\" >Home</Link></li>\r\n                        <li class=\"breadcrumb-item\"><Link >Deck {deck.name}</Link></li>\r\n                        <li class=\"breadcrumb-item active\" aria-current=\"page\">Edit Card {cardId}</li>\r\n                    </ol>\r\n                </nav>\r\n                <h2>Edit Card</h2>\r\n                <form onSubmit={handleSubmit}>\r\n                    <div class=\"form-group\">\r\n                        <label for=\"frontTextArea\">Front</label>\r\n                        <textarea type=\"text\" class=\"form-control\" id=\"front\" \r\n                        placeholder={card.front} rows=\"2\" onChange={handleFrontChange} value={front}></textarea>\r\n                    </div>\r\n                    <div class=\"form-group\">\r\n                        <label for=\"back\">Back</label>\r\n                        <textarea type=\"backTextArea\" class=\"form-control\" id=\"back\" \r\n                        placeholder={card.back} rows=\"2\" onChange={handleBackChange} value={back}></textarea>\r\n                    </div>\r\n    \r\n                    <Link to={`/decks/${deck.id}`}><button type=\"button\" class=\"btn btn-secondary mr-2\">Cancel</button></Link>\r\n                    <button type=\"submit\" class=\"btn btn-primary\">Save</button>\r\n                </form>\r\n            </div>\r\n        )\r\n    }\r\n    return \"loading\";\r\n    }\r\n    else{\r\n    return (\r\n        <div>\r\n            <nav aria-label=\"breadcrumb\">\r\n                <ol class=\"breadcrumb\">\r\n                    <li class=\"breadcrumb-item\"><Link to=\"/\" >Home</Link></li>\r\n                    <li class=\"breadcrumb-item\"><Link >{deck.name}</Link></li>\r\n                    <li class=\"breadcrumb-item active\" aria-current=\"page\">Add Card</li>\r\n                </ol>\r\n            </nav>\r\n            <h2>{deck.name}: Add Card</h2>\r\n            <form onSubmit={handleSubmit}>\r\n                <div class=\"form-group\">\r\n                    <label for=\"front\">Front</label>\r\n                    <textarea type=\"text\" class=\"form-control\" id=\"front\" \r\n                    placeholder=\"Front side of card\" rows=\"2\" onChange={handleFrontChange} value={front}></textarea>\r\n                </div>\r\n                <div class=\"form-group\">\r\n                    <label for=\"back\">Back</label>\r\n                    <textarea type=\"text\" class=\"form-control\" id=\"back\" \r\n                    placeholder=\"Back side of card\" rows=\"2\" onChange={handleBackChange} value={back}></textarea>\r\n                </div>\r\n\r\n                <Link to={`/decks/${deck.id}`}><button type=\"button\" class=\"btn btn-secondary mr-2\">Cancel</button></Link>\r\n                <button type=\"submit\" class=\"btn btn-primary\">Save</button>\r\n            </form>\r\n        </div>\r\n    )\r\n    }\r\n\r\n    }\r\n\r\nexport default AddOrEdit;","import {React} from \"react\";\nimport { Route } from \"react-router-dom\";\nimport { Switch } from \"react-router-dom\";\nimport Header from \"./Header\";\nimport NotFound from \"./NotFound\";\nimport CreateDeckButton from \"./CreateDeckButton\";\nimport DisplayDecks from \"./DisplayDecks\";\nimport {useState} from \"react\";\nimport Study from \"./Study\";\nimport CreateDeck from \"./CreateDeck\";\nimport Deck from \"./Deck\";\nimport EditDeck from \"./EditDeck\"\nimport AddOrEdit from \"./AddOrEdit\";\n\n\nfunction Layout() {\n  const [decks, setDecks] = useState([]);\n  const [newDeck, setNewDeck] = useState({});\n  const [deck, setDeck] = useState([]);\n  const [cards, setCards] = useState([]);\n\n\n\n  return (\n    <div>\n      <Header />\n      <div className=\"container\">\n        {/* TODO: Implement the screen starting here */}\n        <Switch>\n          <Route exact path=\"/\">\n            <CreateDeckButton />\n            <DisplayDecks decks={decks} setDecks={setDecks} />\n          </Route>\n          <Route path=\"/decks/new\">\n            <CreateDeck decks={decks} newDeck={newDeck}/>\n          </Route>\n          <Route exact path=\"/decks/:deckId\">\n            <Deck setDeck={setDeck} deck={deck} cards={cards} setCards={setCards}/>\n          </Route>\n          <Route path=\"/decks/:deckId/study\">\n            <Study decks={decks} deck={deck} setDeck={setDeck} cards={cards} setCards={setCards}/>\n          </Route>\n          <Route path=\"/decks/:deckId/edit\">\n            <EditDeck setDeck={setDeck} deck={deck}/>\n          </Route>\n          <Route path=\"/decks/:deckId/cards/new\">\n            <AddOrEdit setDeck={setDeck} deck={deck}/>\n          </Route>\n          <Route path=\"/decks/:deckId/cards/:cardId/edit\">\n            <AddOrEdit setDeck={setDeck} deck={deck}/>\n          </Route>\n          <Route>\n            <NotFound />\n          </Route>\n        </Switch>\n      </div>\n    </div>\n  );\n}\n\nexport default Layout;\n","import React from \"react\";\nimport { Route, Switch } from \"react-router-dom\";\nimport Layout from \"./Layout\";\nimport \"./style.css\"\n/**\n * App is a wrapper for <Layout>, you should not need to change this file.\n */\n\nfunction App() {\n  return (\n    <div className=\"app-routes\">\n      <Switch>\n        <Route path=\"/\">\n          <Layout />\n        </Route>\n      </Switch>\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport { BrowserRouter as Router } from \"react-router-dom\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Router>\n      <App />\n    </Router>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}